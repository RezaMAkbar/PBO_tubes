/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import com.mysql.cj.jdbc.MysqlDataSource;
import org.jetbrains.annotations.NotNull;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Objects;

/**
 *
 * @author gede.astugmail.com
 */
public class TableStockOpnameDetailed extends JFrame {

    /**
     * Creates new form TableObat
     */
    public TableStockOpnameDetailed(int id) {
        this.id = id;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new JFrame();
        jFrame2 = new JFrame();
        jLabel3 = new JLabel();
        jPanel1 = new JPanel();
        jPanel2 = new JPanel();
        jLabel2 = new JLabel();
        deleteButton = new JButton();
        addButton = new JButton();
        refreshButton = new JButton();
        jLabel4 = new JLabel();
        jPanel3 = new JPanel();
        daftarObatButton = new JButton();
        daftarTransaksiButton = new JButton();
        daftarStockOpnameButton = new JButton();
        jLabel1 = new JLabel();
        backButton = new JButton();
        jPanel4 = new JPanel();
        jScrollPane1 = new JScrollPane();
        tableObat = new JTable();

        GroupLayout jFrame1Layout = new GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
                jFrame1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
                jFrame1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
        );

        GroupLayout jFrame2Layout = new GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
                jFrame2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
                jFrame2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel3.setFont(new Font("Plus Jakarta Sans", 1, 28)); // NOI18N
        jLabel3.setForeground(new Color(255, 255, 255));
        jLabel3.setText("Medinventory");

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new Color(19, 118, 248));

        jPanel2.setBackground(new Color(19, 118, 248));

        deleteButton.setBackground(new Color(19, 118, 248));
        deleteButton.setFont(new Font("Plus Jakarta Sans", 1, 16)); // NOI18N
        deleteButton.setForeground(new Color(255, 255, 255));
        deleteButton.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/decrease.png")))); // NOI18N
        deleteButton.setText("Hapus Stock Obat Opname");
        deleteButton.setBorder(new javax.swing.border.LineBorder(new Color(255, 255, 255), 2, true));
        deleteButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                try {
                    deleteButtonActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        addButton.setFont(new Font("Plus Jakarta Sans", 1, 16)); // NOI18N
        addButton.setForeground(new Color(19, 118, 248));
        addButton.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/increase.png")))); // NOI18N
        addButton.setText("Tambah Stock Obat Opname");
        addButton.setBorder(new javax.swing.border.LineBorder(new Color(255, 255, 255), 2, true));
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new Color(19, 118, 248));
        refreshButton.setFont(new Font("Plus Jakarta Sans", 1, 16)); // NOI18N
        refreshButton.setForeground(new Color(255, 255, 255));
        refreshButton.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/refreshWhite.png")))); // NOI18N
        refreshButton.setBorder(new javax.swing.border.LineBorder(new Color(255, 255, 255), 2, true));
        refreshButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(296, Short.MAX_VALUE)
                                .addComponent(refreshButton, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addButton, GroupLayout.PREFERRED_SIZE, 288, GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(deleteButton, GroupLayout.PREFERRED_SIZE, 261, GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(42, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                .addComponent(deleteButton, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(addButton, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(refreshButton, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel2))
                                .addContainerGap(42, Short.MAX_VALUE))
        );

        jLabel4.setFont(new Font("Plus Jakarta Sans", 1, 30)); // NOI18N
        jLabel4.setForeground(new Color(255, 255, 255));
        jLabel4.setText("Data Stock Opname Dengan ID Obat: " + id);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel4)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new Color(255, 255, 255));

        daftarObatButton.setFont(new Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        daftarObatButton.setForeground(new Color(19, 118, 248));
        daftarObatButton.setText("Daftar Obat-Obatan");
        daftarObatButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                daftarObatButtonActionPerformed(evt);
            }
        });

        daftarTransaksiButton.setFont(new Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        daftarTransaksiButton.setForeground(new Color(19, 118, 248));
        daftarTransaksiButton.setText("Daftar Riwayat Transaksi");
        daftarTransaksiButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                daftarTransaksiButtonActionPerformed(evt);
            }
        });

        daftarStockOpnameButton.setBackground(new Color(19, 118, 248));
        daftarStockOpnameButton.setFont(new Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        daftarStockOpnameButton.setForeground(new Color(255, 255, 255));
        daftarStockOpnameButton.setText("Daftar Stock Opname");
        daftarStockOpnameButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                daftarStockOpnameButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new Font("Plus Jakarta Sans", 1, 15)); // NOI18N
        jLabel1.setForeground(new Color(19, 118, 248));
        jLabel1.setText("MedInventory");

        backButton.setBackground(new Color(19, 118, 248));
        backButton.setFont(new Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        backButton.setForeground(new Color(255, 255, 255));
        backButton.setText("Kembali Ke Menu Utama");
        backButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(daftarObatButton, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(daftarTransaksiButton)
                                .addGap(18, 18, 18)
                                .addComponent(daftarStockOpnameButton, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backButton, GroupLayout.PREFERRED_SIZE, 190, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(17, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(daftarTransaksiButton, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(daftarStockOpnameButton, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(daftarObatButton, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addComponent(backButton, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12))
        );

        tableObat.setAutoCreateRowSorter(true);
        tableObat.setBorder(BorderFactory.createLineBorder(new Color(19, 118, 248)));
        tableObat.setFont(new Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        tableObat.setForeground(new Color(19, 118, 248));
        tableObat.setModel(new DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null}
                },
                new String [] {
                        "ID", "Nama Obat", "Harga Obat", "Tanggal Catat", "No Nota", "No Batch", "Tanggal Kadaluarsa", "Keterangan", "Masuk", "Keluar", "Sisa", "Tempat Simpan", "Actions"
                }
        ));
        try {
            showData(tableObat);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        tableObat.setRowHeight(30);
        tableObat.setSelectionBackground(new Color(51, 51, 255));

        tableObat.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tableObatPropertyChange(evt);
            }
        });
        tableObat.getColumnModel().getColumn(12).setCellRenderer(new ButtonRenderer());

    //    tableObat.getColumnModel().getColumn(11).setCellEditor(new ButtonEditor());
        jScrollPane1.setViewportView(tableObat);

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableObatPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tableObatPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tableObatPropertyChange

    private void daftarObatButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_daftarObatButtonActionPerformed
        TableObat obat = new TableObat();
        obat.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_daftarObatButtonActionPerformed

    private void daftarTransaksiButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_daftarTransaksiButtonActionPerformed
        TableTransaksi transaksi = new TableTransaksi();
        transaksi.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_daftarTransaksiButtonActionPerformed

    private void daftarStockOpnameButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_daftarStockOpnameButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daftarStockOpnameButtonActionPerformed

    private void backButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
       this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void deleteButtonActionPerformed(ActionEvent evt) throws SQLException {//GEN-FIRST:event_deleteButtonActionPerformed
        HapusOpname deleteOpname = new HapusOpname();
        deleteOpname.setVisible(true);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        AddOpname addOpname = new AddOpname();
        addOpname.setVisible(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void refreshButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        try {
            showData(tableObat);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableStockOpname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableStockOpname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableStockOpname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableStockOpname.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableStockOpname().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton refreshButton;
    private JButton daftarObatButton;
    private JButton daftarTransaksiButton;
    private JButton daftarStockOpnameButton;
    private JButton backButton;
    private JButton deleteButton;
    private JButton addButton;
    private JFrame jFrame1;
    private JFrame jFrame2;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JScrollPane jScrollPane1;
    private JTable tableObat;
    private int id;
    // End of variables declaration//GEN-END:variables
    private void showData(@NotNull JTable tableObat) throws SQLException {
        MysqlDataSource dataSource = new MysqlDataSource();
        String DB_URL = "jdbc:mysql://localhost:3306/tubes_pbo?serverTimezone=Asia/Jakarta";
        String DB_USERNAME = "root";
        String DB_PASSWORD = "";

        dataSource.setUrl(DB_URL);
        dataSource.setUser(DB_USERNAME);
        dataSource.setPassword(DB_PASSWORD);

        try (Connection conn = dataSource.getConnection()) {
            String querySelect = "SELECT so.*, o.nama_obat, o.no_batch, o.expired, o.harga " +
                    "FROM stok_opname so " +
                    "JOIN obat o ON so.id_obat = o.id " +
                    "WHERE so.id_obat = ?";
            //add space behind new line for sql statement
            try (PreparedStatement psSelect = conn.prepareStatement(querySelect)) {
                psSelect.setInt(1, id);
                try (ResultSet rs = psSelect.executeQuery()) {
                    DefaultTableModel tableModel = (DefaultTableModel) tableObat.getModel();
                    tableModel.setRowCount(0);

                    while (rs.next()) {
                        int id = rs.getInt("id");
                        String tempatSimpan = rs.getString("tempat_simpan");
                        String id_obat = rs.getString("id_obat");
                        String nama_obat = rs.getString("nama_obat");
                        String tanggalCatat = rs.getString("tanggal_catat");
                        int sisaStock = rs.getInt("sisa_stock");
                        String keterangan = rs.getString("keterangan");
                        int stokKeluar = rs.getInt("stok_keluar");
                        int stokKMasuk = rs.getInt("stok_masuk");
                        int harga = rs.getInt("harga");
                        String noNota = fetchMedNote(id_obat);
                        String noBatch = rs.getString("no_batch");
                        String expired = rs.getString("expired");

                        Object[] row = {id, nama_obat, harga, tanggalCatat, noNota, noBatch, expired, keterangan, stokKMasuk,
                                stokKeluar, sisaStock, tempatSimpan, "Edit Data"};
                        tableModel.addRow(row);
                        ButtonEditor buttonEditor = new ButtonEditor();
                        buttonEditor.setId(id);
                        tableObat.getColumnModel().getColumn(12).setCellEditor(buttonEditor);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private static String fetchMedNote(String id_obat) {
        MysqlDataSource dataSource = new MysqlDataSource();
        String DB_URL = "jdbc:mysql://localhost:3306/tubes_pbo?serverTimezone=Asia/Jakarta";
        String DB_USERNAME = "root";
        String DB_PASSWORD = "";

        dataSource.setUrl(DB_URL);
        dataSource.setUser(DB_USERNAME);
        dataSource.setPassword(DB_PASSWORD);
        String noNota = null;
        String querySelectName = "SELECT no_nota FROM transaksi WHERE id_obat = ?";

        try (Connection conn = dataSource.getConnection();
             PreparedStatement psSelectNote = conn.prepareStatement(querySelectName)) {
            psSelectNote.setString(1, id_obat);

            try (ResultSet rsNoNota = psSelectNote.executeQuery()) {
                if (rsNoNota.next()) {
                    noNota = rsNoNota.getString("no_nota");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return noNota;
    }
    class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer() {
            setOpaque(true);
            setText("Edit Data");
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            return this;
        }
    }

    class ButtonEditor extends AbstractCellEditor implements TableCellEditor, ActionListener {
        private JButton button;
        private String clickedValue;
        private int clickedRow;
        private int id;

        public ButtonEditor() {
            button = new JButton("Edit Data");
            button.setOpaque(true);
            button.addActionListener(this);
        }

        public void setId(int id) {
            this.id = id;
        }

        @Override
        public Object getCellEditorValue() {
            return clickedValue;
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            clickedValue = (value != null) ? value.toString() : "Edit Data";
            clickedRow = row;

            button.setText(clickedValue);
            return button;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            // Retrieve the ID from the clicked row
            int id = (int) tableObat.getValueAt(clickedRow, 0);

            // Open test frame and pass the ID
            try {
                EditStockOpname editFrame = new EditStockOpname(id);
                // Show or set up the frame as needed
            } catch (SQLException ex) {
                throw new RuntimeException(ex);
            }
            fireEditingStopped();
        }
    }

}