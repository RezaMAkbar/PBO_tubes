/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import com.mysql.cj.jdbc.MysqlDataSource;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;



/**
 *
 * @author gede.astugmail.com
 */
public class RestockObat extends javax.swing.JFrame {

    /**
     * Creates new form AddRiwayatTransaksi
     */
    public RestockObat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        penjualanButton = new javax.swing.JButton();
        addObatButton = new javax.swing.JButton();
        restockObatButton = new javax.swing.JButton();
        addOpnameButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        idObatField = new javax.swing.JTextField();
        tanggalRestockTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        emptyInputButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jumlahObatTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        noNotaTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        addBarangButton = new javax.swing.JButton();
        reduceButton = new javax.swing.JButton();
        catatanTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        hargaTextField = new javax.swing.JTextField();
        totalHargaLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel7.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(19, 118, 248));
        jLabel7.setText("Jumlah Barang");

      //  jTextField6.setText("Jumlah Barang");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(19, 118, 248));

        penjualanButton.setBackground(new java.awt.Color(19, 118, 248));
        penjualanButton.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        penjualanButton.setForeground(new java.awt.Color(255, 255, 255));
        penjualanButton.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/transactionWhite.png")))); // NOI18N
        penjualanButton.setText("Penjualan Obat");
        penjualanButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        penjualanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                penjualanButtonActionPerformed(evt);
            }
        });

        addObatButton.setBackground(new java.awt.Color(19, 118, 248));
        addObatButton.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        addObatButton.setForeground(new java.awt.Color(255, 255, 255));
        addObatButton.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/obatWhite.png")))); // NOI18N
        addObatButton.setText("Tambah Obat");
        addObatButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        addObatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addObatButtonActionPerformed(evt);
            }
        });

        restockObatButton.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        restockObatButton.setForeground(new java.awt.Color(19, 118, 248));
        restockObatButton.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/Add_Obat.png")))); // NOI18N
        restockObatButton.setText("Ambil Data Obat dan Tanggal");
        restockObatButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        restockObatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    restockObatButtonActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        addOpnameButton.setBackground(new java.awt.Color(19, 118, 248));
        addOpnameButton.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        addOpnameButton.setForeground(new java.awt.Color(255, 255, 255));
        addOpnameButton.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/infuseWhite.png")))); // NOI18N
        addOpnameButton.setText("Tambah Opname");
        addOpnameButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        addOpnameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOpnameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(addObatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addOpnameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restockObatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(penjualanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(penjualanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addObatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restockObatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addOpnameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        idObatField.setText("Id");

        tanggalRestockTextField.setText("Tanggal Restock");
        tanggalRestockTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanggalRestockTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(19, 118, 248));
        jLabel1.setText("ID");

        jLabel5.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(19, 118, 248));
        jLabel5.setText("Tanggal Restock");

        jLabel6.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(19, 118, 248));
        jLabel6.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/Add_Obat.png")))); // NOI18N
        jLabel6.setText("Restock Obat");

        emptyInputButton.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        emptyInputButton.setForeground(new java.awt.Color(19, 118, 248));
        emptyInputButton.setText("Kosongkan Input");
        emptyInputButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(19, 118, 248), 2, true));
        emptyInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emptyInputButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(19, 118, 248));
        cancelButton.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Batal");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jumlahObatTextField.setText("0000");
        jumlahObatTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateAndUpdate();
            }
        });

        jLabel8.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(19, 118, 248));
        jLabel8.setText("Jumlah Obat");

        noNotaTextField.setText("Nota");
        noNotaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noNotaTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(19, 118, 248));
        jLabel9.setText("Nota");

        searchButton.setBackground(new java.awt.Color(19, 118, 248));
        searchButton.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/ic_sharp-search.png")))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        addBarangButton.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/addJumlahObat.png")))); // NOI18N
        addBarangButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    addBarangButtonActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        reduceButton.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/Remove_Obat.png")))); // NOI18N
        reduceButton.setToolTipText("");
        reduceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    reduceButtonActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        catatanTextField.setText("Catatan");
        catatanTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    catatanTextFieldActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jLabel10.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(19, 118, 248));
        jLabel10.setText("Catatan");

        saveButton.setBackground(new java.awt.Color(19, 118, 248));
        saveButton.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Simpan");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        hargaTextField.setText("Total Harga");

        totalHargaLabel.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 14)); // NOI18N
        totalHargaLabel.setForeground(new java.awt.Color(19, 118, 248));
        totalHargaLabel.setText("Total Harga");

        userLabel.setFont(new java.awt.Font("Plus Jakarta Sans", 1, 13)); // NOI18N
        userLabel.setForeground(new java.awt.Color(19, 118, 248));
        userLabel.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/Main/profileUser.png")))); // NOI18N
        userLabel.setText("Nama Apoteker/User");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(userLabel)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(userLabel)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(185, 185, 185)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(addBarangButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jumlahObatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(reduceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(noNotaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(catatanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(emptyInputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(18, 18, 18)
                                            .addComponent(idObatField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGap(161, 161, 161)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(totalHargaLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tanggalRestockTextField)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hargaTextField))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel6)
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(idObatField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tanggalRestockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jumlahObatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addBarangButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(jLabel8)))
                            .addComponent(reduceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hargaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalHargaLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noNotaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(catatanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emptyInputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     

    }                                                    

    private void addOpnameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOpnameButtonActionPerformed
        AddOpname opname = new AddOpname();
        opname.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addOpnameButtonActionPerformed

    private void penjualanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOpnameButtonActionPerformed
        AddTransaction transaction = new AddTransaction();
        transaction.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addOpnameButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        PopUpInputIDObat popUpInputIDObat = new PopUpInputIDObat();
        AddTransaction instance = PopUpInputIDObat.addTransactionInstance;
        popUpInputIDObat.setAddTransactionInstance(instance);
        popUpInputIDObat.setVisible(true);
    }                                               

    private void addObatButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        AddObat addObat = new AddObat();
        addObat.setVisible(true);
        this.dispose();
    }                                             

    private void emptyInputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emptyInputButtonActionPerformed
        clearTextFieldExceptJumlahObat(this.getContentPane());
    }//GEN-LAST:event_emptyInputButtonActionPerformed

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void namaObatTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaObatTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaObatTextFieldActionPerformed

    private void tanggalTransaksiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanggalTransaksiTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tanggalTransaksiTextFieldActionPerformed

    private void jumlahObatTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahObatTextFieldActionPerformed
        calculateAndUpdate();
    }//GEN-LAST:event_jumlahObatTextFieldActionPerformed

    private void noNotaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noNotaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noNotaTextFieldActionPerformed


    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }
    private void idObatFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTransactionButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addTransactionButtonActionPerformed

    public void setIdObat(int selectedId) {
        idObat = String.valueOf(selectedId);
        // System.out.println("setIdObat: " + idObat);

    }

    public String getIdObat() {
        return idObat;
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addObatButtonActionPerformed
        try {
            if (isAnyTextFieldEmpty()) {
                showErrorMessage("Mohon isi semua field");
                return;
            }

            JTextField[] requiredNumericFields = {jumlahObatTextField, hargaTextField};

            for (JTextField textField : requiredNumericFields) {
                if (!isNum(textField)) {
                    showErrorMessage("Field yang memerlukan angka harus berupa angka/numeric");
                    return;
                }
            }

            try (Connection conn = connection()) {
                insertToDB(conn);
                showSuccessfulMessage("Data berhasil dimasukan");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addObatButtonActionPerformed

    private void restockObatButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_restockObatButtonActionPerformed
        int selectedId = PopUpInputIDObat.getSelectedId();
        setIdObat(selectedId);

        String id = getIdObat();
        // System.out.println(id);
        idObatField.setText(id);
        String loggedInUser = Login.getLoggedInUser();

        // Check if loggedInUser is empty then set it to "empty"
        if (loggedInUser == null || loggedInUser.trim().isEmpty()) {
            loggedInUser = "admin";
        }

        userLabel.setText(loggedInUser);

        Connection conn = connection();
        ObatData obatData = fetchDataForTheId(conn, id);

        if (obatData != null) {
            String namaObat = obatData.getNamaObat();
            double hargaObat = obatData.getHarga();

            // Concatenate namaObat and set it to idObatTextField
            idObatField.setText(id + " (" + namaObat + ")");

            // Set hargaObat to totalHargaTextField
            hargaTextField.setText("Harga: " + hargaObat);
        } else {
            idObatField.setText(id + " (Not Found)");
            hargaTextField.setText("0.0");
        }

        Timestamp currentTimestamp = new Timestamp(new Date().getTime());

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = dateFormat.format(currentTimestamp);

        tanggalRestockTextField.setText(formattedDate);

        // insertTextAreaDataToDB(conn);
        // System.out.println();
    
}//GEN-LAST:event_restockObatButtonActionPerformed
    
    private void addBarangButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_addBarangButtonActionPerformed
        int selectedId = PopUpInputIDObat.getSelectedId();
        setIdObat(selectedId);

        String id = getIdObat();
        Connection conn = connection();
        ObatData obatData = fetchDataForTheId(conn, id);

        // Get current value from jumlahObatTextField
        String currentText = jumlahObatTextField.getText();

        // Parse current value as int
        int currentValue = Integer.parseInt(currentText);

        int newValue = currentValue + 1;

        // Format new value as four digit string like = "0001"
        String formattedValue = String.format("%04d", newValue);

        // Set new value
        jumlahObatTextField.setText(formattedValue);

        if (obatData != null) {
            double hargaObat = obatData.getHarga();
            double price = hargaObat * newValue;

            hargaTextField.setText(String.valueOf(price));
            //    System.out.println(price);
        } else {
            hargaTextField.setText("0.0"); // Set a default value
        }

        //    System.out.println(formattedValue);
    }//GEN-LAST:event_addBarangButtonActionPerformed

    private void reduceButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_reduceButtonActionPerformed
        int selectedId = PopUpInputIDObat.getSelectedId();
        setIdObat(selectedId);

        String id = getIdObat();
        Connection conn = connection();
        ObatData obatData = fetchDataForTheId(conn, id);

        // Get current value from jumlahObatTextField
        String currentText = jumlahObatTextField.getText();

        // Parse current value as int
        int currentValue = Integer.parseInt(currentText);

        int newValue = currentValue - 1;

        // Format new value as four digit string like = "0001"
        String formattedValue = String.format("%04d", newValue);

        // Set new value
        jumlahObatTextField.setText(formattedValue);

        if (obatData != null) {
            double hargaObat = obatData.getHarga();
            double price = hargaObat * newValue;

            hargaTextField.setText(String.valueOf(price));
        } else {
            hargaTextField.setText("0.0"); // Set a default value
        }
    }//GEN-LAST:event_reduceButtonActionPerformed

    private void catatanTextFieldActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_catatanTextFieldActionPerformed
        int selectedId = PopUpInputIDObat.getSelectedId();
        setIdObat(selectedId);

        String id = getIdObat();
        Connection conn = connection();
        ObatData obatData = fetchDataForTheId(conn, id);

        // Get current value from jumlahObatTextField
        String currentText = jumlahObatTextField.getText();

        // Parse current value as int
        int currentValue = Integer.parseInt(currentText);

        int newValue = currentValue - 1;

        // Format new value as four digit string like = "0001"
        String formattedValue = String.format("%04d", newValue);

        // Set new value
        jumlahObatTextField.setText(formattedValue);

        if (obatData != null) {
            double hargaObat = obatData.getHarga();
            double price = hargaObat * newValue;

            hargaTextField.setText(String.valueOf(price));
        } else {
            hargaTextField.setText("0.0"); // Set a default value
        }
    }//GEN-LAST:event_catatanTextFieldActionPerformed


    private void tanggalRestockTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanggalRestockTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tanggalRestockTextFieldActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestockObat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestockObat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestockObat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestockObat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestockObat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton penjualanButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton reduceButton;
    private javax.swing.JButton emptyInputButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton addBarangButton;
    private javax.swing.JButton addObatButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton restockObatButton;
    private javax.swing.JButton addOpnameButton;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel userLabel;
    private javax.swing.JLabel totalHargaLabel;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField idObatField;
    private javax.swing.JTextField hargaTextField;
    private javax.swing.JTextField tanggalRestockTextField;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jumlahObatTextField;
    private javax.swing.JTextField noNotaTextField;
    private javax.swing.JTextField catatanTextField;
    private String idObat;
    // End of variables declaration//GEN-END:variables

    private void clearTextFieldExceptJumlahObat(Container container) {
        for (Component component : container.getComponents()) {
            if (component instanceof JTextField) {
                JTextField textField = (JTextField) component;
                if (!textField.equals(jumlahObatTextField)) {
                    textField.setText("");
                } else {
                    textField.setText("0000");
                }
            } else if (component instanceof Container) {
                // clear text fields in nested container recursively
                clearTextFieldExceptJumlahObat((Container) component);
            }
        }
    }

    private boolean isAnyTextFieldEmpty() {
        JTextField[] requiredTextFields = {tanggalRestockTextField, hargaTextField, jumlahObatTextField, noNotaTextField};

        for (JTextField textField : requiredTextFields) {
            if (textField.getText().trim().isEmpty()) {
                return true; // if one text field is empty
            }
        }
        return false; // if all not empty
    }

    private boolean isIntegerField() {
        JTextField[] requiredIntegerFields = {jumlahObatTextField, hargaTextField, idObatField};

        for (JTextField textField : requiredIntegerFields) {
            String fieldValue = textField.getText().trim();
            if (fieldValue.isEmpty()) {
                continue; //Skip empty field
            }

            try {
                Integer.parseInt(fieldValue);
            } catch (NumberFormatException e) {
                return true; // if one field is not an int
            }
        }
        return false; // if all requiered fields is int
    }

    private Connection connection() throws SQLException {
        MysqlDataSource dataSource = new MysqlDataSource();
        String DB_URL = "jdbc:mysql://localhost:3306/tubes_pbo?serverTimezone=Asia/Jakarta";
        String DB_USERNAME = "root";
        String DB_PASSWORD = "";

        dataSource.setUrl(DB_URL);
        dataSource.setUser(DB_USERNAME);
        dataSource.setPassword(DB_PASSWORD);

        return dataSource.getConnection();
    }
    private static List<String> fetchIDs(Connection conn) throws SQLException {
        List<String> id = new ArrayList<>();
        String querySelect = "SELECT id FROM obat";
        try (PreparedStatement psSelect = conn.prepareStatement(querySelect);
             ResultSet rs = psSelect.executeQuery()) {

            while (rs.next()) {
                int id_obat = rs.getInt("id");

                id.add(String.valueOf(id_obat));
            }
        }

        return id;
    }

//    private static List<String> fetchUsernames(Connection conn) throws SQLException {
//        List<String> usernameList = new ArrayList<>();
//        String querySelect = "SELECT username FROM users";
//        try (PreparedStatement psSelect = conn.prepareStatement(querySelect);
//             ResultSet rs = psSelect.executeQuery()) {
//
//            while (rs.next()) {
//                String username = rs.getString("username");
//
//                usernameList.add(username);
//            }
//        }
//
//        return usernameList;
//    }

    private ObatData fetchDataForTheId(Connection conn, String idObat) throws SQLException {
        String querySelect = "SELECT nama_obat, harga FROM obat WHERE id = ?";

        try (PreparedStatement psSelect = conn.prepareStatement(querySelect)) {
            psSelect.setString(1, idObat);

            try (ResultSet rs = psSelect.executeQuery()) {
                while (rs.next()) {
                    String nama_obat = rs.getString("nama_obat");
                    double harga = rs.getDouble("harga");

                    return new ObatData(nama_obat, harga);
                }
            }
        }

        return null;
    }
    
    private void insertToDB(Connection conn) throws SQLException {
        int selectedId = PopUpInputIDObat.getSelectedId();
        setIdObat(selectedId);

        String id = getIdObat();

        String selectedTipeTransaksi = "restock";

        String queryAdd = "INSERT INTO transaksi (id_obat, tipe_transaksi, no_nota, username, tanggal, jumlah_barang, " +
                "total_harga_beli, created_at)" + "VALUES (?, ?, ?, ?, ?, ?, ?, NOW())";

        PreparedStatement psAdd = conn.prepareStatement(queryAdd);

        psAdd.setInt(1, Integer.parseInt(id));
        psAdd.setString(2, selectedTipeTransaksi);
        psAdd.setString(3, noNotaTextField.getText());
        psAdd.setString(4, userLabel.getText());
        psAdd.setString(5, tanggalRestockTextField.getText());
        psAdd.setInt(6, Integer.parseInt(jumlahObatTextField.getText()));
        psAdd.setDouble(7, Double.parseDouble(hargaTextField.getText()));

        psAdd.executeUpdate();

        updateStock(conn, Integer.parseInt(id), Integer.parseInt(jumlahObatTextField.getText()), selectedTipeTransaksi);

        psAdd.close();
    }

    private void updateStock(Connection conn, int obatId, int jumlah, String tipeTransaksi) throws SQLException {
        String updateStockQuery;

        if ("penjualan".equals(tipeTransaksi)) {
            updateStockQuery = "UPDATE obat SET stock = stock - ? WHERE id = ?";
        } else if ("restock".equals(tipeTransaksi)) {
            updateStockQuery = "UPDATE obat SET stock = stock + ? WHERE id = ?";
        } else {
            throw new IllegalArgumentException("Invalid Type: " + tipeTransaksi);
        }

        try (PreparedStatement psUpdateStock = conn.prepareStatement(updateStockQuery)) {
            psUpdateStock.setInt(1, jumlah);
            psUpdateStock.setInt(2, obatId);

            psUpdateStock.executeUpdate();
        }
    }
    private boolean isNum(JTextField textField) {
        String fieldValue = textField.getText().trim();
        if (fieldValue.isEmpty()) {
            return false;
        }

        try {
            Double.parseDouble(fieldValue);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    private void showErrorMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Gagal", JOptionPane.ERROR_MESSAGE);
    }

    private void showSuccessfulMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Berhasil", JOptionPane.INFORMATION_MESSAGE);
    }
    private void calculateAndUpdate() {
        try {
            int selectedId = PopUpInputIDObat.getSelectedId();
            setIdObat(selectedId);

            String id = getIdObat();
            Connection conn = connection();
            ObatData obatData = fetchDataForTheId(conn, id);
            double hargaObat = obatData.getHarga();

            int currentText = Integer.parseInt(jumlahObatTextField.getText());

            double currentValue = hargaObat * currentText;

            hargaTextField.setText(String.valueOf(currentValue));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
